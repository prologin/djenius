version: "3"

services:
  frontend:
    build:
      context: ../frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      DEV: 1
      DJENIUS_SOCKET_HOST: ${SERVER_HOSTPORT}
      CHOKIDAR_USEPOLLING: "true" # Auto reload react
      CHOKIDAR_INTERVAL: 1000
      WATCHPACK_POLLING: "true"
    volumes:
      - ../frontend:/home/app
      - /home/app/node_modules
    networks:
      - frontend

  backend:
    build:
      context: ../
      dockerfile: Dockerfile.backend
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      DEBUG: 1
      MPV: mpv:6600
      RESOLVER_URL: http://nginx:8000
      PUBLIC_RESOLVER_URL: http://${SERVER_HOSTPORT}
    networks:
      - backend

  resolver:
    build:
      context: ../
      dockerfile: Dockerfile.resolver
    restart: unless-stopped
    ports:
      - "8000:8000"
    environment:
      DEBUG: 1
    networks:
      - outside

  mpv:
    build:
      context: ./mpv/
    restart: unless-stopped
    ports:
      - "6600:6600"
    environment:
      PULSE_SERVER: unix:/run/user/1000/pulse/native
    user: "1000:1000"
    volumes:
      - /run/user/1000/pulse/native:/run/user/1000/pulse/native
    networks:
      - backend

  nginx:
    image: nginx:stable-alpine
    restart: unless-stopped
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro # use local conf
      - ../frontend/build:/srv/frontend:ro # expose React "static" build
    networks:
      - outside
      - backend
      - frontend

networks:
  outside:
  frontend:
    internal: true
  backend:
    internal: true
